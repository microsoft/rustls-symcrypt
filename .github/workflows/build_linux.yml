name: Build Linux

on:
  push:
    branches: [ "main" ]
  pull_request:

env:
  CARGO_TERM_COLOR: always
  FEATURES_TO_TEST: chacha, x25519

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
        - target: x86_64-unknown-linux-gnu
          os: ubuntu-latest
          runs-on: ubuntu-latest
          symcrypt: "https://github.com/microsoft/SymCrypt/releases/download/v103.8.0/symcrypt-linux-generic-amd64-release-103.8.0-53be637.tar.gz"
          run-tests: true
        - target: aarch64-unknown-linux-gnu
          os: ubuntu-24.04
          runs-on: ubuntu-24.04-arm
          symcrypt: "https://github.com/microsoft/SymCrypt/releases/download/v103.8.0/symcrypt-linux-generic-arm64-release-103.8.0-53be637.tar.gz"
          run-tests: true
          
    runs-on: ${{ matrix.os }}
    name: ${{ matrix.target }}    
    env:
      CARGO_BUILD_TARGET: ${{ matrix.target }}
    
    steps:
    # Checkout rustls-symcrypt code
    - name: Checkout rustls-symcrypt
      uses: actions/checkout@v4
      with:
        submodules: true

    - uses: Swatinem/rust-cache@v2

    # Download SymCrypt via PMC
    - name: Install SymCrypt via PMC
      shell: bash
      run: |
        curl -sSL -O https://packages.microsoft.com/config/ubuntu/24.04/packages-microsoft-prod.deb
        sudo dpkg -i packages-microsoft-prod.deb
        sudo apt-get update
        sudo apt-get install -y symcrypt


    - name: Debug build
      run: cargo build --locked --verbose --target ${{ matrix.target }}
    
    - name: Release build
      run: cargo build --release --locked --verbose --target ${{ matrix.target }}

    # - TODO: re-enable when static linking is ready.
    # - name: Run tests (Debug, dynamic)
    #   if: matrix.run-tests
    #   run: cargo test --locked --verbose --all-features --target ${{ matrix.target }}

    # - name: Run tests (Release, dynamic)
    #   if: matrix.run-tests
    #   run: cargo test --release --locked --verbose --all-features --target ${{ matrix.target }}

    - name: Run test (Debug, static)
      if: matrix.run-tests
      run: cargo test --features ${{ env.FEATURES_TO_TEST }} --locked --target ${{ matrix.target }}

    - name: Run test (Release, static)
      if: matrix.run-tests
      run: cargo test --features ${{ env.FEATURES_TO_TEST }} --locked --target ${{ matrix.target }}
